:root {
  --board-width: 90%;
  --board-height: 90%;
}

.rotate {
  transform: rotate(180deg);
}
.noClickOverlay {
  height: var(--board-height);
  aspect-ratio: 1;
  border-radius: 10px;
}
.board {
  height: var(--board-height);
  background-image: url(https://assets-themes.chess.com/image/9rdwe/200.png);
  object-fit: scale-down;
  background-size: 100%;
  background-repeat: no-repeat;
  position: relative;
  aspect-ratio: 1;
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5), 0 0 15px rgba(0, 0, 0, 0.5); 
  border-radius: 10px;
}

@media (max-width: 880px) {
  .board:not(.noMediaQuery) {
    height: unset; // I beleive 'auto' and 'unset' are different things
    width: var(--board-width);
  }
  .noClickOverlay:not(.noMediaQuery) {
    height: unset;
    width: var(--board-width);
  }
}

.board-grid {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  display: flex;
  flex-wrap: wrap;
}
.piece {
  background-size: 100%;
  width: 12.5%;
  height: 12.5%;
  cursor: pointer;
  position: absolute;
  left: 0;
  top: 0;
  transition: all 0.5s ease;
}
.possible-move {
  background-color: rgba(0, 0, 255, 0.308);
  background-size: 100%;
  width: 12.5%;
  height: 12.5%;
  cursor: pointer;
  position: absolute;
  left: 0;
  top: 0;
  transition: all 0.5s ease;
}
.capturable {
  background-color: rgba(255, 0, 0, 0.308);
  background-size: 100%;
  width: 12.5%;
  height: 12.5%;
  cursor: pointer;
  position: absolute;
  left: 0;
  top: 0;
  transition: all 0.5s ease;
}
/* black pieces */
.br {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/br.png);
}
.bb {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/bb.png);
}
.bn {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/bn.png);
}
.bk {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/bk.png);
}
.bq {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/bq.png);
}
.bp {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/bp.png);
}

/* white pieces */
.wr {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/wr.png);
}
.wb {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/wb.png);
}
.wn {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/wn.png);
}
.wk {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/wk.png);
}
.wq {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/wq.png);
}
.wp {
  background-image: url(https://assets-themes.chess.com/image/ejgfv/150/wp.png);
}

.selected-piece {
  transition: all 0.5s ease;
  background-color: rgba(255, 255, 0, 0.295);
}

.generate-classes(@index, @outerIndex) when (@index > 0) {
  // Calculate the class number

  @class: @index + @outerIndex * 8;
  .square-@{class} {
    transform: translate((@index - 1) * 100%, @outerIndex * 100%);
  }
  .rotate .square-@{class} {
    transform: translate((@index - 1) * 100%, @outerIndex * 100%) rotate(180deg);
  }
  // Call the mixin recursively with the index decremented
  .generate-classes(@index - 1, @outerIndex);
}

.Outer-loop(@outerIndex) when (@outerIndex >= 0) {
  .generate-classes(8, @outerIndex);
  // Call the mixin recursively with the outer index decremented
  .Outer-loop(@outerIndex - 1);
}

// Start the loop
.Outer-loop(7);

.check-wk .piece.wk {
  background-color: rgba(255, 0, 0, 0.609);
}
.check-bk .piece.bk {
  background-color: rgba(255, 0, 0, 0.609);
}
.promote > div{
  width: 100%;
  height: 25.42%;
  background-size: 100%;
  left: 0;
  top: 0;
  cursor: pointer;
  display: flex;
}
.promote {
  width: 0;
  height: 0;
  opacity: 0;
  transition: opacity 0.25s ease;
  position: absolute;
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0), 0 0 15px rgba(0, 0, 0, 0.5); 
  background-color: white;
  z-index: 1;
  top: 0;
  display: flex;
  flex-direction: column;
  flex: 0 0 auto;
  flex-wrap: nowrap;
}
.promote-bp{
  opacity: 1;
  height: 55%;
  top: 45%;
  width: 12.5%;
  flex-direction: column-reverse;
}
.rotate .promote-bp{
  flex-direction: column;
}
.rotate .promote-wp{
  flex-direction: column-reverse;
}
.promote-wp{
  opacity: 1;
  height: 55%;
  top: 0;
  width: 12.5%;
}
.promotion-close-btn{
  height: 10% !important;
  width: 100%;
  background-color: rgb(213, 213, 213);
  color: grey;
  display: flex;
  justify-content: center;
  align-items: center;
}